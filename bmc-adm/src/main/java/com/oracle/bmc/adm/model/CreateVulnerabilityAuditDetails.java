/**
 * Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.adm.model;

/**
 * Details to create a Vulnerability Audit.
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20220421")
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(
    builder = CreateVulnerabilityAuditDetails.Builder.class
)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
public final class CreateVulnerabilityAuditDetails {
    @Deprecated
    @java.beans.ConstructorProperties({
        "knowledgeBaseId",
        "compartmentId",
        "applicationDependencies",
        "buildType",
        "configuration",
        "displayName",
        "freeformTags",
        "definedTags"
    })
    public CreateVulnerabilityAuditDetails(
            String knowledgeBaseId,
            String compartmentId,
            java.util.List<ApplicationDependency> applicationDependencies,
            VulnerabilityAudit.BuildType buildType,
            VulnerabilityAuditConfiguration configuration,
            String displayName,
            java.util.Map<String, String> freeformTags,
            java.util.Map<String, java.util.Map<String, Object>> definedTags) {
        super();
        this.knowledgeBaseId = knowledgeBaseId;
        this.compartmentId = compartmentId;
        this.applicationDependencies = applicationDependencies;
        this.buildType = buildType;
        this.configuration = configuration;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.definedTags = definedTags;
    }

    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    public static class Builder {
        @com.fasterxml.jackson.annotation.JsonProperty("knowledgeBaseId")
        private String knowledgeBaseId;

        public Builder knowledgeBaseId(String knowledgeBaseId) {
            this.knowledgeBaseId = knowledgeBaseId;
            this.__explicitlySet__.add("knowledgeBaseId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("compartmentId")
        private String compartmentId;

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = compartmentId;
            this.__explicitlySet__.add("compartmentId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("applicationDependencies")
        private java.util.List<ApplicationDependency> applicationDependencies;

        public Builder applicationDependencies(
                java.util.List<ApplicationDependency> applicationDependencies) {
            this.applicationDependencies = applicationDependencies;
            this.__explicitlySet__.add("applicationDependencies");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("buildType")
        private VulnerabilityAudit.BuildType buildType;

        public Builder buildType(VulnerabilityAudit.BuildType buildType) {
            this.buildType = buildType;
            this.__explicitlySet__.add("buildType");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("configuration")
        private VulnerabilityAuditConfiguration configuration;

        public Builder configuration(VulnerabilityAuditConfiguration configuration) {
            this.configuration = configuration;
            this.__explicitlySet__.add("configuration");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("displayName")
        private String displayName;

        public Builder displayName(String displayName) {
            this.displayName = displayName;
            this.__explicitlySet__.add("displayName");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("freeformTags")
        private java.util.Map<String, String> freeformTags;

        public Builder freeformTags(java.util.Map<String, String> freeformTags) {
            this.freeformTags = freeformTags;
            this.__explicitlySet__.add("freeformTags");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("definedTags")
        private java.util.Map<String, java.util.Map<String, Object>> definedTags;

        public Builder definedTags(
                java.util.Map<String, java.util.Map<String, Object>> definedTags) {
            this.definedTags = definedTags;
            this.__explicitlySet__.add("definedTags");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public CreateVulnerabilityAuditDetails build() {
            CreateVulnerabilityAuditDetails __instance__ =
                    new CreateVulnerabilityAuditDetails(
                            knowledgeBaseId,
                            compartmentId,
                            applicationDependencies,
                            buildType,
                            configuration,
                            displayName,
                            freeformTags,
                            definedTags);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(CreateVulnerabilityAuditDetails o) {
            Builder copiedBuilder =
                    knowledgeBaseId(o.getKnowledgeBaseId())
                            .compartmentId(o.getCompartmentId())
                            .applicationDependencies(o.getApplicationDependencies())
                            .buildType(o.getBuildType())
                            .configuration(o.getConfiguration())
                            .displayName(o.getDisplayName())
                            .freeformTags(o.getFreeformTags())
                            .definedTags(o.getDefinedTags());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    public Builder toBuilder() {
        return new Builder().copy(this);
    }

    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the Knowledge Base.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("knowledgeBaseId")
    private final String knowledgeBaseId;

    public String getKnowledgeBaseId() {
        return knowledgeBaseId;
    }

    /**
     * The Oracle Cloud identifier ([OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm)) of the compartment associated with the Vulnerability Audit.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("compartmentId")
    private final String compartmentId;

    public String getCompartmentId() {
        return compartmentId;
    }

    /**
     * List of Application Dependencies (without vulnerabilities).
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("applicationDependencies")
    private final java.util.List<ApplicationDependency> applicationDependencies;

    public java.util.List<ApplicationDependency> getApplicationDependencies() {
        return applicationDependencies;
    }

    /**
     * The type of the build tool.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("buildType")
    private final VulnerabilityAudit.BuildType buildType;

    public VulnerabilityAudit.BuildType getBuildType() {
        return buildType;
    }

    @com.fasterxml.jackson.annotation.JsonProperty("configuration")
    private final VulnerabilityAuditConfiguration configuration;

    public VulnerabilityAuditConfiguration getConfiguration() {
        return configuration;
    }

    /**
     * The name of the Vulnerability Audit.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("displayName")
    private final String displayName;

    public String getDisplayName() {
        return displayName;
    }

    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * Example: {@code {"bar-key": "value"}}
     *
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("freeformTags")
    private final java.util.Map<String, String> freeformTags;

    public java.util.Map<String, String> getFreeformTags() {
        return freeformTags;
    }

    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * Example: {@code {"foo-namespace": {"bar-key": "value"}}}
     *
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("definedTags")
    private final java.util.Map<String, java.util.Map<String, Object>> definedTags;

    public java.util.Map<String, java.util.Map<String, Object>> getDefinedTags() {
        return definedTags;
    }

    @Override
    public String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder();
        sb.append("CreateVulnerabilityAuditDetails(");
        sb.append("knowledgeBaseId=").append(String.valueOf(this.knowledgeBaseId));
        sb.append(", compartmentId=").append(String.valueOf(this.compartmentId));
        sb.append(", applicationDependencies=")
                .append(String.valueOf(this.applicationDependencies));
        sb.append(", buildType=").append(String.valueOf(this.buildType));
        sb.append(", configuration=").append(String.valueOf(this.configuration));
        sb.append(", displayName=").append(String.valueOf(this.displayName));
        sb.append(", freeformTags=").append(String.valueOf(this.freeformTags));
        sb.append(", definedTags=").append(String.valueOf(this.definedTags));
        sb.append("__explicitlySet__=").append(String.valueOf(this.__explicitlySet__));
        sb.append(")");
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof CreateVulnerabilityAuditDetails)) {
            return false;
        }

        CreateVulnerabilityAuditDetails other = (CreateVulnerabilityAuditDetails) o;
        return java.util.Objects.equals(this.knowledgeBaseId, other.knowledgeBaseId)
                && java.util.Objects.equals(this.compartmentId, other.compartmentId)
                && java.util.Objects.equals(
                        this.applicationDependencies, other.applicationDependencies)
                && java.util.Objects.equals(this.buildType, other.buildType)
                && java.util.Objects.equals(this.configuration, other.configuration)
                && java.util.Objects.equals(this.displayName, other.displayName)
                && java.util.Objects.equals(this.freeformTags, other.freeformTags)
                && java.util.Objects.equals(this.definedTags, other.definedTags)
                && java.util.Objects.equals(this.__explicitlySet__, other.__explicitlySet__);
    }

    @Override
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result =
                (result * PRIME)
                        + (this.knowledgeBaseId == null ? 43 : this.knowledgeBaseId.hashCode());
        result =
                (result * PRIME)
                        + (this.compartmentId == null ? 43 : this.compartmentId.hashCode());
        result =
                (result * PRIME)
                        + (this.applicationDependencies == null
                                ? 43
                                : this.applicationDependencies.hashCode());
        result = (result * PRIME) + (this.buildType == null ? 43 : this.buildType.hashCode());
        result =
                (result * PRIME)
                        + (this.configuration == null ? 43 : this.configuration.hashCode());
        result = (result * PRIME) + (this.displayName == null ? 43 : this.displayName.hashCode());
        result = (result * PRIME) + (this.freeformTags == null ? 43 : this.freeformTags.hashCode());
        result = (result * PRIME) + (this.definedTags == null ? 43 : this.definedTags.hashCode());
        result =
                (result * PRIME)
                        + (this.__explicitlySet__ == null ? 43 : this.__explicitlySet__.hashCode());
        return result;
    }

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

    public java.util.Set<String> get__explicitlySet__() {
        return this.__explicitlySet__;
    }
}
