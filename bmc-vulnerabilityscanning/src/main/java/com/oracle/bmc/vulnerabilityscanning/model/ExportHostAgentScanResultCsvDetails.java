/**
 * Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.vulnerabilityscanning.model;

/**
 * Details for a HostAgentScan list export to CSV action
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20210215")
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(
    builder = ExportHostAgentScanResultCsvDetails.Builder.class
)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
public final class ExportHostAgentScanResultCsvDetails {
    @Deprecated
    @java.beans.ConstructorProperties({
        "compartmentId",
        "timeStartedAfter",
        "timeStartedBefore",
        "highestProblemSeverity",
        "instanceId",
        "operatingSystem"
    })
    public ExportHostAgentScanResultCsvDetails(
            String compartmentId,
            java.util.Date timeStartedAfter,
            java.util.Date timeStartedBefore,
            ScanResultProblemSeverity highestProblemSeverity,
            String instanceId,
            String operatingSystem) {
        super();
        this.compartmentId = compartmentId;
        this.timeStartedAfter = timeStartedAfter;
        this.timeStartedBefore = timeStartedBefore;
        this.highestProblemSeverity = highestProblemSeverity;
        this.instanceId = instanceId;
        this.operatingSystem = operatingSystem;
    }

    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    public static class Builder {
        @com.fasterxml.jackson.annotation.JsonProperty("compartmentId")
        private String compartmentId;

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = compartmentId;
            this.__explicitlySet__.add("compartmentId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timeStartedAfter")
        private java.util.Date timeStartedAfter;

        public Builder timeStartedAfter(java.util.Date timeStartedAfter) {
            this.timeStartedAfter = timeStartedAfter;
            this.__explicitlySet__.add("timeStartedAfter");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timeStartedBefore")
        private java.util.Date timeStartedBefore;

        public Builder timeStartedBefore(java.util.Date timeStartedBefore) {
            this.timeStartedBefore = timeStartedBefore;
            this.__explicitlySet__.add("timeStartedBefore");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("highestProblemSeverity")
        private ScanResultProblemSeverity highestProblemSeverity;

        public Builder highestProblemSeverity(ScanResultProblemSeverity highestProblemSeverity) {
            this.highestProblemSeverity = highestProblemSeverity;
            this.__explicitlySet__.add("highestProblemSeverity");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("instanceId")
        private String instanceId;

        public Builder instanceId(String instanceId) {
            this.instanceId = instanceId;
            this.__explicitlySet__.add("instanceId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("operatingSystem")
        private String operatingSystem;

        public Builder operatingSystem(String operatingSystem) {
            this.operatingSystem = operatingSystem;
            this.__explicitlySet__.add("operatingSystem");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public ExportHostAgentScanResultCsvDetails build() {
            ExportHostAgentScanResultCsvDetails __instance__ =
                    new ExportHostAgentScanResultCsvDetails(
                            compartmentId,
                            timeStartedAfter,
                            timeStartedBefore,
                            highestProblemSeverity,
                            instanceId,
                            operatingSystem);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(ExportHostAgentScanResultCsvDetails o) {
            Builder copiedBuilder =
                    compartmentId(o.getCompartmentId())
                            .timeStartedAfter(o.getTimeStartedAfter())
                            .timeStartedBefore(o.getTimeStartedBefore())
                            .highestProblemSeverity(o.getHighestProblemSeverity())
                            .instanceId(o.getInstanceId())
                            .operatingSystem(o.getOperatingSystem());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    public Builder toBuilder() {
        return new Builder().copy(this);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment to list scans in.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("compartmentId")
    private final String compartmentId;

    public String getCompartmentId() {
        return compartmentId;
    }

    /**
     * Date and time after which scans were started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeStartedAfter")
    private final java.util.Date timeStartedAfter;

    public java.util.Date getTimeStartedAfter() {
        return timeStartedAfter;
    }

    /**
     * Date and time before which scans were started, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeStartedBefore")
    private final java.util.Date timeStartedBefore;

    public java.util.Date getTimeStartedBefore() {
        return timeStartedBefore;
    }

    /**
     * Parameter to filter by highestProblemSeverity for scan results
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("highestProblemSeverity")
    private final ScanResultProblemSeverity highestProblemSeverity;

    public ScanResultProblemSeverity getHighestProblemSeverity() {
        return highestProblemSeverity;
    }

    /**
     * Parameter to filter by a single compute instance ID for scan results
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("instanceId")
    private final String instanceId;

    public String getInstanceId() {
        return instanceId;
    }

    /**
     * Parameter to filter by operating system for scan results
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("operatingSystem")
    private final String operatingSystem;

    public String getOperatingSystem() {
        return operatingSystem;
    }

    @Override
    public String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder();
        sb.append("ExportHostAgentScanResultCsvDetails(");
        sb.append("compartmentId=").append(String.valueOf(this.compartmentId));
        sb.append(", timeStartedAfter=").append(String.valueOf(this.timeStartedAfter));
        sb.append(", timeStartedBefore=").append(String.valueOf(this.timeStartedBefore));
        sb.append(", highestProblemSeverity=").append(String.valueOf(this.highestProblemSeverity));
        sb.append(", instanceId=").append(String.valueOf(this.instanceId));
        sb.append(", operatingSystem=").append(String.valueOf(this.operatingSystem));
        sb.append("__explicitlySet__=").append(String.valueOf(this.__explicitlySet__));
        sb.append(")");
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof ExportHostAgentScanResultCsvDetails)) {
            return false;
        }

        ExportHostAgentScanResultCsvDetails other = (ExportHostAgentScanResultCsvDetails) o;
        return java.util.Objects.equals(this.compartmentId, other.compartmentId)
                && java.util.Objects.equals(this.timeStartedAfter, other.timeStartedAfter)
                && java.util.Objects.equals(this.timeStartedBefore, other.timeStartedBefore)
                && java.util.Objects.equals(
                        this.highestProblemSeverity, other.highestProblemSeverity)
                && java.util.Objects.equals(this.instanceId, other.instanceId)
                && java.util.Objects.equals(this.operatingSystem, other.operatingSystem)
                && java.util.Objects.equals(this.__explicitlySet__, other.__explicitlySet__);
    }

    @Override
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result =
                (result * PRIME)
                        + (this.compartmentId == null ? 43 : this.compartmentId.hashCode());
        result =
                (result * PRIME)
                        + (this.timeStartedAfter == null ? 43 : this.timeStartedAfter.hashCode());
        result =
                (result * PRIME)
                        + (this.timeStartedBefore == null ? 43 : this.timeStartedBefore.hashCode());
        result =
                (result * PRIME)
                        + (this.highestProblemSeverity == null
                                ? 43
                                : this.highestProblemSeverity.hashCode());
        result = (result * PRIME) + (this.instanceId == null ? 43 : this.instanceId.hashCode());
        result =
                (result * PRIME)
                        + (this.operatingSystem == null ? 43 : this.operatingSystem.hashCode());
        result =
                (result * PRIME)
                        + (this.__explicitlySet__ == null ? 43 : this.__explicitlySet__.hashCode());
        return result;
    }

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

    public java.util.Set<String> get__explicitlySet__() {
        return this.__explicitlySet__;
    }
}
