/**
 * Copyright (c) 2016, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.vulnerabilityscanning.model;

/**
 * Details on a CVE
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20210215")
@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))
@lombok.Value
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(builder = CveDetails.Builder.class)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
@lombok.Builder(builderClassName = "Builder", toBuilder = true)
public class CveDetails {
    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    @lombok.experimental.Accessors(fluent = true)
    public static class Builder {
        @com.fasterxml.jackson.annotation.JsonProperty("cveReference")
        private String cveReference;

        public Builder cveReference(String cveReference) {
            this.cveReference = cveReference;
            this.__explicitlySet__.add("cveReference");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("title")
        private String title;

        public Builder title(String title) {
            this.title = title;
            this.__explicitlySet__.add("title");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("description")
        private String description;

        public Builder description(String description) {
            this.description = description;
            this.__explicitlySet__.add("description");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("relatedCveReference")
        private String relatedCveReference;

        public Builder relatedCveReference(String relatedCveReference) {
            this.relatedCveReference = relatedCveReference;
            this.__explicitlySet__.add("relatedCveReference");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("cvss3")
        private String cvss3;

        public Builder cvss3(String cvss3) {
            this.cvss3 = cvss3;
            this.__explicitlySet__.add("cvss3");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timePublished")
        private java.util.Date timePublished;

        public Builder timePublished(java.util.Date timePublished) {
            this.timePublished = timePublished;
            this.__explicitlySet__.add("timePublished");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timeUpdated")
        private java.util.Date timeUpdated;

        public Builder timeUpdated(java.util.Date timeUpdated) {
            this.timeUpdated = timeUpdated;
            this.__explicitlySet__.add("timeUpdated");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public CveDetails build() {
            CveDetails __instance__ =
                    new CveDetails(
                            cveReference,
                            title,
                            description,
                            relatedCveReference,
                            cvss3,
                            timePublished,
                            timeUpdated);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(CveDetails o) {
            Builder copiedBuilder =
                    cveReference(o.getCveReference())
                            .title(o.getTitle())
                            .description(o.getDescription())
                            .relatedCveReference(o.getRelatedCveReference())
                            .cvss3(o.getCvss3())
                            .timePublished(o.getTimePublished())
                            .timeUpdated(o.getTimeUpdated());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    /**
     * CVE ID
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("cveReference")
    String cveReference;

    /**
     * Vulnerability title
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("title")
    String title;

    /**
     * CVE description
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("description")
    String description;

    /**
     * ID of related CVE, if applicable
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("relatedCveReference")
    String relatedCveReference;

    /**
     * CVSS 3 Score
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("cvss3")
    String cvss3;

    /**
     * Date/time the CVE was published
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timePublished")
    java.util.Date timePublished;

    /**
     * Date/time the CVE was last modified
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeUpdated")
    java.util.Date timeUpdated;

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();
}
