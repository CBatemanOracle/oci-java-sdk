/**
 * Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.vulnerabilityscanning.model;

/**
 * Details on a CVE
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20210215")
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(builder = CveDetails.Builder.class)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
public final class CveDetails {
    @Deprecated
    @java.beans.ConstructorProperties({
        "cveReference",
        "title",
        "description",
        "relatedCveReference",
        "cvss3",
        "timePublished",
        "timeUpdated"
    })
    public CveDetails(
            String cveReference,
            String title,
            String description,
            String relatedCveReference,
            String cvss3,
            java.util.Date timePublished,
            java.util.Date timeUpdated) {
        super();
        this.cveReference = cveReference;
        this.title = title;
        this.description = description;
        this.relatedCveReference = relatedCveReference;
        this.cvss3 = cvss3;
        this.timePublished = timePublished;
        this.timeUpdated = timeUpdated;
    }

    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    public static class Builder {
        /**
         * CVE ID
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("cveReference")
        private String cveReference;

        /**
         * CVE ID
         * @param cveReference the value to set
         * @return this builder
         **/
        public Builder cveReference(String cveReference) {
            this.cveReference = cveReference;
            this.__explicitlySet__.add("cveReference");
            return this;
        }
        /**
         * Vulnerability title
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("title")
        private String title;

        /**
         * Vulnerability title
         * @param title the value to set
         * @return this builder
         **/
        public Builder title(String title) {
            this.title = title;
            this.__explicitlySet__.add("title");
            return this;
        }
        /**
         * CVE description
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("description")
        private String description;

        /**
         * CVE description
         * @param description the value to set
         * @return this builder
         **/
        public Builder description(String description) {
            this.description = description;
            this.__explicitlySet__.add("description");
            return this;
        }
        /**
         * ID of related CVE, if applicable
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("relatedCveReference")
        private String relatedCveReference;

        /**
         * ID of related CVE, if applicable
         * @param relatedCveReference the value to set
         * @return this builder
         **/
        public Builder relatedCveReference(String relatedCveReference) {
            this.relatedCveReference = relatedCveReference;
            this.__explicitlySet__.add("relatedCveReference");
            return this;
        }
        /**
         * CVSS 3 Score
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("cvss3")
        private String cvss3;

        /**
         * CVSS 3 Score
         * @param cvss3 the value to set
         * @return this builder
         **/
        public Builder cvss3(String cvss3) {
            this.cvss3 = cvss3;
            this.__explicitlySet__.add("cvss3");
            return this;
        }
        /**
         * Date/time the CVE was published
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("timePublished")
        private java.util.Date timePublished;

        /**
         * Date/time the CVE was published
         * @param timePublished the value to set
         * @return this builder
         **/
        public Builder timePublished(java.util.Date timePublished) {
            this.timePublished = timePublished;
            this.__explicitlySet__.add("timePublished");
            return this;
        }
        /**
         * Date/time the CVE was last modified
         **/
        @com.fasterxml.jackson.annotation.JsonProperty("timeUpdated")
        private java.util.Date timeUpdated;

        /**
         * Date/time the CVE was last modified
         * @param timeUpdated the value to set
         * @return this builder
         **/
        public Builder timeUpdated(java.util.Date timeUpdated) {
            this.timeUpdated = timeUpdated;
            this.__explicitlySet__.add("timeUpdated");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public CveDetails build() {
            CveDetails __instance__ =
                    new CveDetails(
                            cveReference,
                            title,
                            description,
                            relatedCveReference,
                            cvss3,
                            timePublished,
                            timeUpdated);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(CveDetails o) {
            Builder copiedBuilder =
                    cveReference(o.getCveReference())
                            .title(o.getTitle())
                            .description(o.getDescription())
                            .relatedCveReference(o.getRelatedCveReference())
                            .cvss3(o.getCvss3())
                            .timePublished(o.getTimePublished())
                            .timeUpdated(o.getTimeUpdated());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    public Builder toBuilder() {
        return new Builder().copy(this);
    }

    /**
     * CVE ID
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("cveReference")
    private final String cveReference;

    /**
     * CVE ID
     * @return the value
     **/
    public String getCveReference() {
        return cveReference;
    }

    /**
     * Vulnerability title
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("title")
    private final String title;

    /**
     * Vulnerability title
     * @return the value
     **/
    public String getTitle() {
        return title;
    }

    /**
     * CVE description
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("description")
    private final String description;

    /**
     * CVE description
     * @return the value
     **/
    public String getDescription() {
        return description;
    }

    /**
     * ID of related CVE, if applicable
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("relatedCveReference")
    private final String relatedCveReference;

    /**
     * ID of related CVE, if applicable
     * @return the value
     **/
    public String getRelatedCveReference() {
        return relatedCveReference;
    }

    /**
     * CVSS 3 Score
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("cvss3")
    private final String cvss3;

    /**
     * CVSS 3 Score
     * @return the value
     **/
    public String getCvss3() {
        return cvss3;
    }

    /**
     * Date/time the CVE was published
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timePublished")
    private final java.util.Date timePublished;

    /**
     * Date/time the CVE was published
     * @return the value
     **/
    public java.util.Date getTimePublished() {
        return timePublished;
    }

    /**
     * Date/time the CVE was last modified
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeUpdated")
    private final java.util.Date timeUpdated;

    /**
     * Date/time the CVE was last modified
     * @return the value
     **/
    public java.util.Date getTimeUpdated() {
        return timeUpdated;
    }

    @Override
    public String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder();
        sb.append("CveDetails(");
        sb.append("cveReference=").append(String.valueOf(this.cveReference));
        sb.append(", title=").append(String.valueOf(this.title));
        sb.append(", description=").append(String.valueOf(this.description));
        sb.append(", relatedCveReference=").append(String.valueOf(this.relatedCveReference));
        sb.append(", cvss3=").append(String.valueOf(this.cvss3));
        sb.append(", timePublished=").append(String.valueOf(this.timePublished));
        sb.append(", timeUpdated=").append(String.valueOf(this.timeUpdated));
        sb.append("__explicitlySet__=").append(String.valueOf(this.__explicitlySet__));
        sb.append(")");
        return sb.toString();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof CveDetails)) {
            return false;
        }

        CveDetails other = (CveDetails) o;
        return java.util.Objects.equals(this.cveReference, other.cveReference)
                && java.util.Objects.equals(this.title, other.title)
                && java.util.Objects.equals(this.description, other.description)
                && java.util.Objects.equals(this.relatedCveReference, other.relatedCveReference)
                && java.util.Objects.equals(this.cvss3, other.cvss3)
                && java.util.Objects.equals(this.timePublished, other.timePublished)
                && java.util.Objects.equals(this.timeUpdated, other.timeUpdated)
                && java.util.Objects.equals(this.__explicitlySet__, other.__explicitlySet__);
    }

    @Override
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = (result * PRIME) + (this.cveReference == null ? 43 : this.cveReference.hashCode());
        result = (result * PRIME) + (this.title == null ? 43 : this.title.hashCode());
        result = (result * PRIME) + (this.description == null ? 43 : this.description.hashCode());
        result =
                (result * PRIME)
                        + (this.relatedCveReference == null
                                ? 43
                                : this.relatedCveReference.hashCode());
        result = (result * PRIME) + (this.cvss3 == null ? 43 : this.cvss3.hashCode());
        result =
                (result * PRIME)
                        + (this.timePublished == null ? 43 : this.timePublished.hashCode());
        result = (result * PRIME) + (this.timeUpdated == null ? 43 : this.timeUpdated.hashCode());
        result =
                (result * PRIME)
                        + (this.__explicitlySet__ == null ? 43 : this.__explicitlySet__.hashCode());
        return result;
    }

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

    public java.util.Set<String> get__explicitlySet__() {
        return this.__explicitlySet__;
    }
}
