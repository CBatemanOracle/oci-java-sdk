/**
 * Copyright (c) 2016, 2021, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.vulnerabilityscanning.model;

/**
 * An endpoint protection found in a host scan
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20210215")
@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))
@lombok.Value
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(
    builder = HostEndpointProtectionScanResultEndpointProtection.Builder.class
)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
@lombok.Builder(builderClassName = "Builder", toBuilder = true)
public class HostEndpointProtectionScanResultEndpointProtection {
    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    @lombok.experimental.Accessors(fluent = true)
    public static class Builder {
        @com.fasterxml.jackson.annotation.JsonProperty("service")
        private String service;

        public Builder service(String service) {
            this.service = service;
            this.__explicitlySet__.add("service");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("configurationFinding")
        private String configurationFinding;

        public Builder configurationFinding(String configurationFinding) {
            this.configurationFinding = configurationFinding;
            this.__explicitlySet__.add("configurationFinding");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timeSignatureUpdated")
        private java.util.Date timeSignatureUpdated;

        public Builder timeSignatureUpdated(java.util.Date timeSignatureUpdated) {
            this.timeSignatureUpdated = timeSignatureUpdated;
            this.__explicitlySet__.add("timeSignatureUpdated");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("severity")
        private ScanResultProblemSeverity severity;

        public Builder severity(ScanResultProblemSeverity severity) {
            this.severity = severity;
            this.__explicitlySet__.add("severity");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public HostEndpointProtectionScanResultEndpointProtection build() {
            HostEndpointProtectionScanResultEndpointProtection __instance__ =
                    new HostEndpointProtectionScanResultEndpointProtection(
                            service, configurationFinding, timeSignatureUpdated, severity);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(HostEndpointProtectionScanResultEndpointProtection o) {
            Builder copiedBuilder =
                    service(o.getService())
                            .configurationFinding(o.getConfigurationFinding())
                            .timeSignatureUpdated(o.getTimeSignatureUpdated())
                            .severity(o.getSeverity());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    /**
     * Name of endpoint protection service
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("service")
    String service;

    /**
     * Configuration information for endpoint protection service at the time of scan
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("configurationFinding")
    String configurationFinding;

    /**
     * Date and time endpoint protection signature was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeSignatureUpdated")
    java.util.Date timeSignatureUpdated;

    /**
     * Problem severity
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("severity")
    ScanResultProblemSeverity severity;

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();
}
