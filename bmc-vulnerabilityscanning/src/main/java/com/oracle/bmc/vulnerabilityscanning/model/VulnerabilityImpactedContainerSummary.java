/**
 * Copyright (c) 2016, 2022, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */
package com.oracle.bmc.vulnerabilityscanning.model;

/**
 * Information on a container image impacted by a vulnerability
 * <br/>
 * Note: Objects should always be created or deserialized using the {@link Builder}. This model distinguishes fields
 * that are {@code null} because they are unset from fields that are explicitly set to {@code null}. This is done in
 * the setter methods of the {@link Builder}, which maintain a set of all explicitly set fields called
 * {@link #__explicitlySet__}. The {@link #hashCode()} and {@link #equals(Object)} methods are implemented to take
 * {@link #__explicitlySet__} into account. The constructor, on the other hand, does not set {@link #__explicitlySet__}
 * (since the constructor cannot distinguish explicit {@code null} from unset {@code null}).
 **/
@javax.annotation.Generated(value = "OracleSDKGenerator", comments = "API Version: 20210215")
@lombok.AllArgsConstructor(onConstructor = @__({@Deprecated}))
@lombok.Value
@com.fasterxml.jackson.databind.annotation.JsonDeserialize(
    builder = VulnerabilityImpactedContainerSummary.Builder.class
)
@com.fasterxml.jackson.annotation.JsonFilter(com.oracle.bmc.http.internal.ExplicitlySetFilter.NAME)
@lombok.Builder(builderClassName = "Builder", toBuilder = true)
public class VulnerabilityImpactedContainerSummary {
    @com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder(withPrefix = "")
    @lombok.experimental.Accessors(fluent = true)
    public static class Builder {
        @com.fasterxml.jackson.annotation.JsonProperty("containerScanTargetId")
        private String containerScanTargetId;

        public Builder containerScanTargetId(String containerScanTargetId) {
            this.containerScanTargetId = containerScanTargetId;
            this.__explicitlySet__.add("containerScanTargetId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("repository")
        private String repository;

        public Builder repository(String repository) {
            this.repository = repository;
            this.__explicitlySet__.add("repository");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("registry")
        private String registry;

        public Builder registry(String registry) {
            this.registry = registry;
            this.__explicitlySet__.add("registry");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("image")
        private String image;

        public Builder image(String image) {
            this.image = image;
            this.__explicitlySet__.add("image");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("lastContainerScanId")
        private String lastContainerScanId;

        public Builder lastContainerScanId(String lastContainerScanId) {
            this.lastContainerScanId = lastContainerScanId;
            this.__explicitlySet__.add("lastContainerScanId");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonProperty("timeScanCompleted")
        private java.util.Date timeScanCompleted;

        public Builder timeScanCompleted(java.util.Date timeScanCompleted) {
            this.timeScanCompleted = timeScanCompleted;
            this.__explicitlySet__.add("timeScanCompleted");
            return this;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();

        public VulnerabilityImpactedContainerSummary build() {
            VulnerabilityImpactedContainerSummary __instance__ =
                    new VulnerabilityImpactedContainerSummary(
                            containerScanTargetId,
                            repository,
                            registry,
                            image,
                            lastContainerScanId,
                            timeScanCompleted);
            __instance__.__explicitlySet__.addAll(__explicitlySet__);
            return __instance__;
        }

        @com.fasterxml.jackson.annotation.JsonIgnore
        public Builder copy(VulnerabilityImpactedContainerSummary o) {
            Builder copiedBuilder =
                    containerScanTargetId(o.getContainerScanTargetId())
                            .repository(o.getRepository())
                            .registry(o.getRegistry())
                            .image(o.getImage())
                            .lastContainerScanId(o.getLastContainerScanId())
                            .timeScanCompleted(o.getTimeScanCompleted());

            copiedBuilder.__explicitlySet__.retainAll(o.__explicitlySet__);
            return copiedBuilder;
        }
    }

    /**
     * Create a new builder.
     */
    public static Builder builder() {
        return new Builder();
    }

    /**
     * The scan target id of the repository scan result
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("containerScanTargetId")
    String containerScanTargetId;

    /**
     * The repository id of the container image.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("repository")
    String repository;

    /**
     * The registry key of the container image.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("registry")
    String registry;

    /**
     * The name of the container image.
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("image")
    String image;

    /**
     * The ID of the last container image scan result Id
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("lastContainerScanId")
    String lastContainerScanId;

    /**
     * Date and time the scan was completed, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339)
     **/
    @com.fasterxml.jackson.annotation.JsonProperty("timeScanCompleted")
    java.util.Date timeScanCompleted;

    @com.fasterxml.jackson.annotation.JsonIgnore
    private final java.util.Set<String> __explicitlySet__ = new java.util.HashSet<String>();
}
